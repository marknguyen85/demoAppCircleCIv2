version: 2
jobs:
  build:
    docker:
      - image: php:7.0-apache
        environment:
          APP_ENV: local
          APP_DEBUG: true
          APP_KEY: kjcndjjksddwdwdw
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testdb
          DB_USERNAME: root
          DB_PASSWORD: password
          CACHE_DRIVER: memcached
          QUEUE_DRIVER: sync
      - image: mariadb:5.5
        environment:
          MYSQL_DATABASE: testdb
          MYSQL_ROOT_PASSWORD: password
    working_directory: /var/www/html
    steps:
      - run:
          name: Install System Packages
          command: apt-get update && apt-get -y install git unzip zlib1g-dev
      - checkout
      - run:
          name: Install PHP Extensions
          command: docker-php-ext-install pdo pdo_mysql zip
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "copy('https://composer.github.io/installer.sig', 'composer-setup.sig');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('composer-setup.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      - run:
          name: Install Project Dependencies
          command: php composer.phar install
      - run:
          name: Initialize Database
          command: |
            php artisan migrate:refresh
            php artisan db:seed
      - run:
          name: Run Tests
          command: vendor/bin/phpunit
                # Deploy production   
      - run:
          name: zip code
          command: |
            set -xu
            apt-get update && apt-get install -y zip
            mkdir -p /tmp/artifacts
            cd /var/www/html
            zip -r /tmp/artifacts/data.zip *
            cp /tmp/artifacts/data.zip /artifacts
      - run:
          name: install aws cli
          command: |
            apt-get update && apt-get install -y python3-pip
            pip3 install awscli
            apt-get update && apt-get install -y awscli
      - run:
          name: update code to s3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then 
              aws s3 cp /tmp/artifacts/data.zip s3://codedeploy-thuannd/Build/data.zip
            fi
      - run:
          name: config aws
          command: |
              aws configure 
              AWS Access Key ID [None]: ${aws_access_key_id}
              AWS Secret Access Key [None]: ${aws_secret_access_key}
              Default region name [None]: ${region}
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              aws deploy create-deployment --application-name circleci-thuannd --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name circleci-thuannd --description "My demo deployment" --s3-location bucket=codedeploy-thuannd,bundleType=zip,key=Build/data.zip
            fi
